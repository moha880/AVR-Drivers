/*
 * TIMERS_prg.c
 *
 *  Created on: Jul 19, 2022
 *      Author: mazen
 */

#include "../../LIB/STD_TYPES.h"
#include "../../LIB/BIT_MATH.h"


#include"TIMERS_int.h"
#include"TIMERS_prv.h"
#include "TIMERS_cfg.h"

static void (*G_TIM0_OVF_Callback)(void);
u32 G_u32IntervalCount;


void MTIMER_vInit(void)
{
	TCCR0 =	0b00000010;
	TIMSK = ( TIMSK & 0xfe)| 0x01;
}
void MTIMERS_vSetPreloadValue(u16 A_u16Preload){
	TCNT0 =A_u16Preload;
}
void MTIMER_vStartTimer(void){
	TIMSK = ( TIMSK & 0xf8)| 0b010;

}
void MTIMERS_vStopTimer(/* Timer ID ?*/) {

	TIMSK = ( TIMSK & 0xf8)| 0b000;

}


void MTIMERS_vSetInterval_Asynch(u16 A_u16IntervalCounts, void (*A_fptr)(void)){

	G_u32IntervalCount = A_u16IntervalCounts;
	G_TIM0_OVF_Callback=A_fptr;

}
void MTIMERS_vSetCallback( ){



}

void __vector_11() __attribute((signal));
void __vector_11() {


}












